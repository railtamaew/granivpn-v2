#!/bin/bash

echo "=== üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê GITHUB ACTIONS ==="
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
check_requirements() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è..."
    
    if ! command -v git &> /dev/null; then
        echo "‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v gh &> /dev/null; then
        echo "‚ö†Ô∏è  GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
        if [[ "$OSTYPE" == "darwin"* ]]; then
            brew install gh
        elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update && sudo apt install gh -y
        else
            echo "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –û–°. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GitHub CLI –≤—Ä—É—á–Ω—É—é"
            exit 1
        fi
    fi
    
    echo "‚úÖ –í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
    echo ""
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub CLI
setup_github_cli() {
    echo "üîê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é GitHub CLI..."
    
    if ! gh auth status &> /dev/null; then
        echo "–í–æ–π–¥–∏—Ç–µ –≤ GitHub..."
        gh auth login
    else
        echo "‚úÖ GitHub CLI —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    fi
    
    echo ""
}

# –°–æ–∑–¥–∞–Ω–∏–µ SSH –∫–ª—é—á–∞
create_ssh_key() {
    echo "üîë –°–æ–∑–¥–∞—é SSH –∫–ª—é—á..."
    
    SSH_KEY_PATH="$HOME/.ssh/granivpn_key"
    
    if [ ! -f "$SSH_KEY_PATH" ]; then
        echo "–°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π SSH –∫–ª—é—á –¥–ª—è GraniVPN..."
        ssh-keygen -t rsa -b 4096 -f "$SSH_KEY_PATH" -N "" -C "granivpn@github.com"
        echo "‚úÖ SSH –∫–ª—é—á —Å–æ–∑–¥–∞–Ω: $SSH_KEY_PATH"
    else
        echo "‚úÖ SSH –∫–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $SSH_KEY_PATH"
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á
    echo ""
    echo "üìã –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á (–¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∞ DigitalOcean —Å–µ—Ä–≤–µ—Ä):"
    echo "=========================================="
    cat "${SSH_KEY_PATH}.pub"
    echo "=========================================="
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
    echo "üîê –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á (–¥–æ–±–∞–≤—å—Ç–µ –≤ GitHub Secrets –∫–∞–∫ DROPLET_SSH_KEY):"
    echo "=========================================="
    cat "$SSH_KEY_PATH"
    echo "=========================================="
    echo ""
}

# –°–æ–∑–¥–∞–Ω–∏–µ DigitalOcean Droplet
create_droplet() {
    echo "üåä –°–æ–∑–¥–∞–Ω–∏–µ DigitalOcean Droplet..."
    
    if ! command -v doctl &> /dev/null; then
        echo "‚ö†Ô∏è  DigitalOcean CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
        if [[ "$OSTYPE" == "darwin"* ]]; then
            brew install doctl
        elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
            snap install doctl
        else
            echo "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ DigitalOcean CLI –≤—Ä—É—á–Ω—É—é: https://docs.digitalocean.com/reference/doctl/how-to/install/"
            exit 1
        fi
    fi
    
    echo "üîê –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DigitalOcean API —Ç–æ–∫–µ–Ω:"
    echo "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ https://cloud.digitalocean.com/account/api/tokens"
    echo "2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ Write"
    echo "3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω"
    echo ""
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à DigitalOcean API —Ç–æ–∫–µ–Ω: " DO_TOKEN
    
    if [ -z "$DO_TOKEN" ]; then
        echo "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –≤–≤–µ–¥–µ–Ω"
        return 1
    fi
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º doctl
    doctl auth init --access-token "$DO_TOKEN"
    
    echo ""
    echo "üåç –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞:"
    doctl compute region list
    
    read -p "–í–≤–µ–¥–∏—Ç–µ slug —Ä–µ–≥–∏–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, nyc1): " REGION
    
    echo ""
    echo "üíæ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä Droplet:"
    doctl compute size list
    
    read -p "–í–≤–µ–¥–∏—Ç–µ slug —Ä–∞–∑–º–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, s-1vcpu-1gb): " SIZE
    
    echo ""
    read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è Droplet (–Ω–∞–ø—Ä–∏–º–µ—Ä, granivpn-server): " DROPLET_NAME
    
    if [ -z "$DROPLET_NAME" ]; then
        DROPLET_NAME="granivpn-server"
    fi
    
    # –°–æ–∑–¥–∞–µ–º Droplet
    echo "üöÄ –°–æ–∑–¥–∞—é Droplet..."
    DROPLET_ID=$(doctl compute droplet create "$DROPLET_NAME" \
        --size "$SIZE" \
        --image ubuntu-22-04-x64 \
        --region "$REGION" \
        --ssh-keys "$(doctl compute ssh-key list --format ID,Name --no-header | grep "$(whoami)" | awk '{print $1}' | head -1)" \
        --format ID,Name,PublicIPv4,Region,Status \
        --no-header | head -1)
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Droplet —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
        echo "$DROPLET_ID"
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Droplet..."
        sleep 30
        
        # –ü–æ–ª—É—á–∞–µ–º IP –∞–¥—Ä–µ—Å
        DROPLET_IP=$(doctl compute droplet get "$DROPLET_NAME" --format PublicIPv4 --no-header)
        echo "üåê IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: $DROPLET_IP"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        echo "DROPLET_IP=$DROPLET_IP" > .env.droplet
        echo "DROPLET_NAME=$DROPLET_NAME" >> .env.droplet
        
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Droplet"
        return 1
    fi
    
    echo ""
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub Secrets
setup_github_secrets() {
    echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub Secrets..."
    
    if [ -f ".env.droplet" ]; then
        source .env.droplet
    else
        read -p "–í–≤–µ–¥–∏—Ç–µ IP –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ DigitalOcean —Å–µ—Ä–≤–µ—Ä–∞: " DROPLET_IP
    fi
    
    if [ -z "$DROPLET_IP" ]; then
        echo "‚ùå IP –∞–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω"
        return 1
    fi
    
    SSH_KEY_PATH="$HOME/.ssh/granivpn_key"
    
    if [ ! -f "$SSH_KEY_PATH" ]; then
        echo "‚ùå SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    REPO_NAME=$(git remote get-url origin | sed 's/.*github.com[:/]\([^/]*\/[^/]*\)\.git/\1/')
    
    echo "üìÅ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_NAME"
    echo ""
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ä–µ—Ç—ã
    echo "‚ûï –î–æ–±–∞–≤–ª—è—é —Å–µ–∫—Ä–µ—Ç DROPLET_HOST..."
    echo "$DROPLET_IP" | gh secret set DROPLET_HOST --repo "$REPO_NAME"
    
    echo "‚ûï –î–æ–±–∞–≤–ª—è—é —Å–µ–∫—Ä–µ—Ç DROPLET_USER..."
    echo "root" | gh secret set DROPLET_USER --repo "$REPO_NAME"
    
    echo "‚ûï –î–æ–±–∞–≤–ª—è—é —Å–µ–∫—Ä–µ—Ç DROPLET_SSH_KEY..."
    cat "$SSH_KEY_PATH" | gh secret set DROPLET_SSH_KEY --repo "$REPO_NAME"
    
    echo "‚ûï –î–æ–±–∞–≤–ª—è—é —Å–µ–∫—Ä–µ—Ç DROPLET_PORT..."
    echo "22" | gh secret set DROPLET_PORT --repo "$REPO_NAME"
    
    echo ""
    echo "‚úÖ –í—Å–µ —Å–µ–∫—Ä–µ—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ GitHub!"
    echo ""
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
setup_server() {
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
    
    if [ -f ".env.droplet" ]; then
        source .env.droplet
    else
        read -p "–í–≤–µ–¥–∏—Ç–µ IP –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: " DROPLET_IP
    fi
    
    if [ -z "$DROPLET_IP" ]; then
        echo "‚ùå IP –∞–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω"
        return 1
    fi
    
    SSH_KEY_PATH="$HOME/.ssh/granivpn_key"
    
    echo "üì° –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É..."
    
    # –ñ–¥–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
    echo "‚è≥ –ñ–¥–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
    while ! ssh -i "$SSH_KEY_PATH" -o ConnectTimeout=10 -o StrictHostKeyChecking=no root@"$DROPLET_IP" exit &> /dev/null; do
        echo "–°–µ—Ä–≤–µ—Ä –µ—â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∂–¥–µ–º..."
        sleep 10
    done
    
    echo "‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω!"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
    echo "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Docker..."
    ssh -i "$SSH_KEY_PATH" root@"$DROPLET_IP" << 'EOF'
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
        apt update && apt upgrade -y
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
        apt install docker-compose-plugin -y
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
        usermod -aG docker root
        
        # –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
        systemctl enable docker
        systemctl start docker
        
        echo "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
EOF
    
    # –ö–æ–ø–∏—Ä—É–µ–º SSH –∫–ª—é—á –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    echo "üîë –ö–æ–ø–∏—Ä—É—é SSH –∫–ª—é—á –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    ssh-copy-id -i "${SSH_KEY_PATH}.pub" root@"$DROPLET_IP"
    
    echo "‚úÖ –°–µ—Ä–≤–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
    echo ""
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
test_deployment() {
    echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..."
    
    if [ -f ".env.droplet" ]; then
        source .env.droplet
    else
        read -p "–í–≤–µ–¥–∏—Ç–µ IP –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: " DROPLET_IP
    fi
    
    if [ -z "$DROPLET_IP" ]; then
        echo "‚ùå IP –∞–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω"
        return 1
    fi
    
    echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ..."
    
    # –î–µ–ª–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π commit
    echo "# –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ $(date)" >> test-deploy.md
    git add test-deploy.md
    git commit -m "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
    git push origin main
    
    echo ""
    echo "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π commit –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!"
    echo "üåê –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ GitHub Actions –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:"
    echo "   https://github.com/$(git remote get-url origin | sed 's/.*github.com[:/]\([^/]*\/[^/]*\)\.git/\1/')/actions"
    echo ""
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        echo "=== üéØ –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ==="
        echo "1. üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è"
        echo "2. üîê –ù–∞—Å—Ç—Ä–æ–∏—Ç—å GitHub CLI"
        echo "3. üîë –°–æ–∑–¥–∞—Ç—å SSH –∫–ª—é—á"
        echo "4. üåä –°–æ–∑–¥–∞—Ç—å DigitalOcean Droplet"
        echo "5. üîê –ù–∞—Å—Ç—Ä–æ–∏—Ç—å GitHub Secrets"
        echo "6. üîß –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
        echo "7. üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
        echo "8. üöÄ –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
        echo "9. ‚ùå –í—ã—Ö–æ–¥"
        echo ""
        
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-9): " choice
        
        case $choice in
            1) check_requirements ;;
            2) setup_github_cli ;;
            3) create_ssh_key ;;
            4) create_droplet ;;
            5) setup_github_secrets ;;
            6) setup_server ;;
            7) test_deployment ;;
            8) full_automation ;;
            9) echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"; exit 0 ;;
            *) echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞." ;;
        esac
        
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        echo ""
    done
}

# –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
full_automation() {
    echo "üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ô –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ô –ù–ê–°–¢–†–û–ô–ö–ò ==="
    echo ""
    
    check_requirements
    setup_github_cli
    create_ssh_key
    create_droplet
    setup_github_secrets
    setup_server
    test_deployment
    
    echo ""
    echo "üéâ –ü–û–õ–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
    echo ""
    echo "=== üìã –ß–¢–û –ù–ê–°–¢–†–û–ï–ù–û ==="
    echo "‚úÖ GitHub CLI –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    echo "‚úÖ SSH –∫–ª—é—á —Å–æ–∑–¥–∞–Ω"
    echo "‚úÖ DigitalOcean Droplet —Å–æ–∑–¥–∞–Ω"
    echo "‚úÖ GitHub Secrets –¥–æ–±–∞–≤–ª–µ–Ω—ã"
    echo "‚úÖ –°–µ—Ä–≤–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    echo "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"
    echo ""
    echo "üåê –í–∞—à GraniVPN –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:"
    echo "   http://$(cat .env.droplet | grep DROPLET_IP | cut -d'=' -f2)"
    echo ""
    echo "üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ GitHub Actions!"
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if [ "$1" == "--auto" ]; then
    full_automation
else
    main_menu
fi
