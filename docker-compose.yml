services:
  postgres:
    image: postgres:15
    container_name: granivpn_postgres
    environment:
      POSTGRES_DB: granivpn
      POSTGRES_USER: granivpn_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-granivpn_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: granivpn_redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  api:
    build: ./backend
    container_name: granivpn_api
    environment:
      - DATABASE_URL=postgresql://granivpn_user:${POSTGRES_PASSWORD:-granivpn_password}@postgres:5432/granivpn
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DOMAIN=${DOMAIN:-granivpn.com}
      - API_URL=${API_URL:-http://localhost:8000}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:8080}
      - WIREGUARD_SERVER_IP=${WIREGUARD_SERVER_IP:-94.131.107.227}
      - WIREGUARD_PORT=${WIREGUARD_PORT:-51820}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  admin-panel:
    build: ./admin-panel
    container_name: granivpn_admin
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=${API_URL:-http://localhost:8000}
    depends_on:
      - api
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: granivpn_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./server-config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./server-config/ssl:/etc/ssl/certs
    depends_on:
      - api
      - admin-panel
    restart: unless-stopped

volumes:
  postgres_data:
